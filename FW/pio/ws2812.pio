;
; Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;

.program ws2812
.side_set 1

;.lang_opt python sideset_init = pico.PIO.OUT_HIGH
;.lang_opt python out_init     = pico.PIO.OUT_HIGH
;.lang_opt python out_shiftdir = 1

.wrap_target
bitloop:
    out x, 1       side 0 [6] ; Side-set still takes place when instruction stalls
    jmp !x do_zero side 1 [3] ; Branch on the bit we shifted out. Positive pulse
do_one:
    jmp  bitloop   side 1 [4] ; Continue driving high, for a long pulse
do_zero:
    nop            side 0 [4] ; Or drive low, for a short pulse
.wrap

% c-sdk {
#include "hardware/clocks.h"

static inline void ws2812_program_init(PIO pio, uint sm, uint offset, uint pin, bool rgbw) {

    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_config c = ws2812_program_get_default_config(offset);
    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_out_shift(&c, false, true, rgbw ? 32 : 24);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    // Must run 12800000hz
    float div = clock_get_hz(clk_sys) / (12800000);
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}
